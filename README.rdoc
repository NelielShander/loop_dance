= LoopDance

No forks. No threads. Just looped scheduler based on `daemon_controller` and `looper` for rails 3 projects.

Easy to install:

    gem 'loop_dance'

Simple to setup. Just create file 'lib/loop_dance.rb':

    class Dancer < LoopDance::Dancer

      every 3.hours do
        User.notify_all
      end

      every 60.seconds do
        Report.checks
      end

    end

LoopDance automatically starts at the rails server startup.

Can be managed from the application:

    Dancer.start unless Dancer.running?

Can be managed by the rake tasks:

    rake loop_dance:start
    rake loop_dance:stop
    rake loop_dance:status


== Contributing to loop_dance
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2010 Danil Pismenny. See LICENSE.txt for
further details.

